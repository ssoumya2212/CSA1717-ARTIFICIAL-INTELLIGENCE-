from collections import deque
def water_jug(x, y, target):
    visited = set(); q = deque(); q.append((0, 0))
    while q:
        a, b = q.popleft()
        if (a, b) in visited: continue
        visited.add((a, b)); print(a, b)
        if a == target or b == target: break
        q.extend([(x, b), (a, y), (0, b), (a, 0),
                  (min(x, a + b), max(0, a + b - x)),
                  (max(0, a + b - y), min(y, a + b))])
water_jug(4, 3, 2)
